"""Init

Revision ID: 7a47d99f79e5
Revises: 
Create Date: 2024-11-15 15:14:31.981112

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column

# revision identifiers, used by Alembic.
revision: str = '7a47d99f79e5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('olymp',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('start_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('end_date', sa.TIMESTAMP(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_olymp_id'), 'olymp', ['id'], unique=False)
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_role_id'), 'role', ['id'], unique=False)
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('olymp_id', sa.Integer(), nullable=True),
    sa.Column('task_number', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['olymp_id'], ['olymp.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_id'), 'task', ['id'], unique=False)
    op.create_index(op.f('ix_task_task_number'), 'task', ['task_number'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('surname', sa.String(), nullable=True),
    sa.Column('organisation', sa.String(), nullable=True),
    sa.Column('teacher', sa.String(), nullable=True),
    sa.Column('registered_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    role_table = table('role',
        column('id', sa.Integer()),
        column('name', sa.String())
    )

    op.bulk_insert(role_table, [
        {'id': 1, 'name': 'Пользователь'},
        {'id': 2, 'name': 'Администратор'},
        {'id': 3, 'name': 'Организатор'},
        {'id': 4, 'name': 'Эксперт'},
        {'id': 5, 'name': 'Участник'},
        {'id': 6, 'name': 'Команда'}
    ])
    user_table = table('user',
        column('id', sa.Integer()),
        column('email', sa.String()),
        column('name', sa.String()),
        column('lastname', sa.String()),
        column('surname', sa.String()),
        column('organisation', sa.String()),
        column('registered_at', sa.TIMESTAMP()),
        column('role_id', sa.Integer()),
        column('teacher', sa.String()),
        column('hashed_password', sa.String(length=1024)),
        column('is_active', sa.Boolean()),
        column('is_superuser', sa.Boolean()),
        column('is_verified', sa.Boolean())
    )

    op.bulk_insert(user_table, [
        {
            'id': 2,
            'email': 'admin',
            'name': 'Admin',
            'lastname': 'Adminov',
            'surname': 'Adminovich',
            'organisation': 'AdminOrg',
            'registered_at': None,
            'teacher': None,
            'role_id': 2,
            'hashed_password': '$2a$12$F0lSIcBX03p.Tr1h3OqfPuoz7WTbh9yIbdOHbiXe0QfkBwfh7pEm.',
            'is_active': True,
            'is_superuser': True,
            'is_verified': True
        }
    ])
    op.create_table('answer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_answer_id'), 'answer', ['id'], unique=False)
    op.create_table('expert_task_assignments',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('task_id', 'user_id')
    )
    op.create_table('registered_olymp',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('olymp_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['olymp_id'], ['olymp.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'olymp_id')
    )
    op.create_table('task_attachment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('filepath', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_attachment_id'), 'task_attachment', ['id'], unique=False)
    op.create_table('team_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_members_id'), 'team_members', ['id'], unique=False)
    op.create_table('answer_attachment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('filepath', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('answer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['answer_id'], ['answer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_answer_attachment_id'), 'answer_attachment', ['id'], unique=False)
    op.create_table('rate_answer',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('answer_id', sa.Integer(), nullable=False),
    sa.Column('rate', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['answer_id'], ['answer.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'answer_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rate_answer')
    op.drop_index(op.f('ix_answer_attachment_id'), table_name='answer_attachment')
    op.drop_table('answer_attachment')
    op.drop_index(op.f('ix_team_members_id'), table_name='team_members')
    op.drop_table('team_members')
    op.drop_index(op.f('ix_task_attachment_id'), table_name='task_attachment')
    op.drop_table('task_attachment')
    op.drop_table('registered_olymp')
    op.drop_table('expert_task_assignments')
    op.drop_index(op.f('ix_answer_id'), table_name='answer')
    op.drop_table('answer')
    op.drop_table('user')
    op.drop_index(op.f('ix_task_task_number'), table_name='task')
    op.drop_index(op.f('ix_task_id'), table_name='task')
    op.drop_table('task')
    op.drop_index(op.f('ix_role_id'), table_name='role')
    op.drop_table('role')
    op.drop_index(op.f('ix_olymp_id'), table_name='olymp')
    op.drop_table('olymp')
    # ### end Alembic commands ###
