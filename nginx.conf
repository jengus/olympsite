events {
    worker_connections 1024;  # Максимальное количество одновременных соедине>
}

http {
    types {
        text/html html;
        text/css css;
        application/javascript js;
        application/json json;
    }
    server {
        listen 8080;  # Порт, на котором Nginx будет принимать соединения

        server_name 193.124.203.3;
        client_max_body_size 50M;
        root /usr/share/nginx/html;  # Путь к скомпилированным файлам React
        index index.html;

        location / {
            try_files $uri /index.html;  # Для SPA маршрутов (если использует>
        }
#       location / {
#            proxy_pass http://interface:3000;
#            proxy_set_header Host $host;
#            proxy_set_header X-Real-IP $remote_addr;
#            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#            proxy_set_header X-Forwarded-Proto $scheme;
#       }
       # Настройка проксирования запросов к frontend
        location /static/ {
             alias /usr/share/nginx/html/static/;
             add_header Access-Control-Allow-Origin *;
             add_header Cache-Control "public, max-age=31536000, immutable";
        }
        location ~* \.(css|js|jpg|png|woff2|eot|ttf|svg)$ {
            add_header Access-Control-Allow-Origin *;
            add_header Cache-Control "public, max-age=31536000, immutable";
            try_files $uri =404;
        }



        # Настройка проксирования и ограничения доступа к backend API
        location /api/ {
            # Устанавливаем переменную для контроля доступа
            set $allow_api_access 0;
            if ($http_referer ~* "http://193.124.203.3:8080/") {
                set $allow_api_access 1;
            }

            # Если доступ не разрешен, возвращаем ошибку
            if ($allow_api_access = 0) {
                return 403;
            }

            # Добавляем CORS-заголовки
            add_header Access-Control-Allow-Origin http://193.124.203.3:8080;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE, PATCH";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Access-Control-Allow-Credentials "true";
            # Обрабатываем preflight-запросы (OPTIONS)
            if ($request_method = OPTIONS) {
                return 204;
            }

            # Прокси для backend API
            proxy_pass http://backend:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
